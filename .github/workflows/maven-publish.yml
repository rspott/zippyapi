# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: user-java

on:
 workflow_dispatch:
 push:
   branches: [main]
   paths:
      - 'apis/user-java/**'
 pull_request:
   branches: [main]

env:
  AZURE_RESOURCE_GROUP: openhackztk992u0rg  # target resource, must match the {resource-group-name} you setup in the pre-requisties
  WEB_APP_NAME: openhackztk992u0userjava         # set the name for the Web App on Azure
  CONTAINER_IMAGE_NAME: api-user-java # set the name for the container image
  ACR_NAME: devopsoh             # set the name for the Azure Container Registry
  ACR_LOGIN_SERVER: openhackztk992u0acr.azurecr.io # fqdn for the Azure Container Registry
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }} # user name for accessing Azure Container Registry
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }} # password for accesing the Azure Container Registry
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
#     - uses: actions/checkout@v2
#     - run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{env.ACR_NAME}}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }} -f ./apis/user-java/Dockerfile ./apis/user-java
#     - run: docker login ${{ env.ACR_LOGIN_SERVER }} -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
#     - run: docker push ${{ env.ACR_LOGIN_SERVER }}/${{env.ACR_NAME}}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}

#     - name: Login to ACR
#       uses: docker/login-action@v1
#       with:
#         registry: ${{ env.ACR_LOGIN_SERVER }}
#         username: ${{ env.ACR_USERNAME }}
#         password: ${{ env.ACR_PASSWORD }}
#         logout: false

#     - uses: azure/webapps-deploy@v2
#       with:
#           app-name: 'openhackztk992u0userjava'
#           publish-profile: ${{ secrets.AZURE_WEBAPP_USERJAVA_STAGING_PUBLISH_PROFILE }}
#           images: ${{ env.ACR_LOGIN_SERVER }}/${{env.ACR_NAME}}/${{ env.CONTAINER_IMAGE_NAME }}:${{ github.sha }}
#           slot-name: staging

 
#     - name: Check the deployed service URL
#       uses: jtalk/url-health-check-action@v2
#       with:
#       # Check the following URLs one by one sequentially
#         url: https://openhackztk992u0userjava-staging.azurewebsites.net/api/healthcheck/user-java
#       # Follow redirects, or just report success on 3xx status codes
#         follow-redirect: false # Optional, defaults to "false"
#       # Fail this action after this many failed attempts
#         max-attempts: 3 # Optional, defaults to 1
#       # Delay between retries
#         retry-delay: 5s # Optional, only applicable to max-attempts > 1
#       # Retry all errors, including 404. This option might trigger curl upgrade.
#         retry-all: false # Optional, defaults to "false"

    - name: AZ LOGIN
      uses: Azure/login@v1.4.3
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: SWAP PR Deployment Slot
      uses: Azure/cli@v1
      with:
        inlineScript: >
          az webapp deployment slot swap --slot staging --target-slot production --resource-group openhackztk992u0rg --name openhackztk992u0userjava
     
     
